name: Generate Weekly Security Report

on:
  schedule:
    - cron: "0 0 * * 1"  # 每週一 00:00 UTC 自動執行（台灣時間 08:00）
  workflow_dispatch:  # 允許手動觸發

jobs:
  fetch-and-summarize-news:
    runs-on: ubuntu-latest

    steps:
      - name: 取得 Repository
        uses: actions/checkout@v4

      - name: 設定 Python 環境
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: 安裝 Python 依賴套件
        run: pip install requests beautifulsoup4 groq

      - name: 獲取最新 iThome 資安新聞
        run: python scripts/fetch_news.py  # 執行爬取新聞的腳本

      - name: 總結新聞內容（Groq API）
        env:
          GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
        run: python scripts/summarize_news.py  # 執行 Groq API 摘要腳本

      - name: 生成 Marp 簡報 Markdown
        run: python scripts/generate_slides.py  # 執行 Marp 簡報腳本

      # 設定 Node.js 來安裝 Marp CLI
      - name: 設定 Node.js 環境
        uses: actions/setup-node@v4
        with:
          node-version: "18"  # 安裝 Node.js 18 LTS 版本

      - name: 安裝 Marp CLI
        run: npm install -g @marp-team/marp-cli  # 安裝 Marp CLI

      - name: 轉換 Markdown 為 PDF
        run: marp data/report.md --pdf --output data/security_report.pdf  # 生成 PDF

      # 上傳新聞 JSON（原始新聞）
      - name: 上傳新聞 JSON
        uses: actions/upload-artifact@v4
        with:
          name: ithome-news
          path: data/news.json
          retention-days: 7

      # 上傳摘要 JSON（新聞摘要）
      - name: 上傳摘要 JSON
        uses: actions/upload-artifact@v4
        with:
          name: ithome-news-summary
          path: data/summaries.json
          retention-days: 7

      # 上傳 PDF 簡報
      - name: 上傳 PDF 簡報
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: data/security_report.pdf
          retention-days: 7

      - name: 部署報告到 GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./data  # 發布 data/ 目錄（包含 security_report.pdf）

      - name: 發送 LINE 通知
        run: python scripts/send_notification.py
        env:
          LINE_NOTIFY_TOKEN: ${{ secrets.LINE_NOTIFY_TOKEN }}
    